name: Build and Release Package
on:
  workflow_call:
    inputs:
      project-name:
        type: string
        description: 'Project name'
        required: true
      project-path:
        type: string
        description: 'Project path'
        required: true
      npm-working-dir:
        type: string
        description: 'NPM working directory'
        required: false
      npm-enabled:
        type: boolean
        description: 'NPM enabled'
        required: false
        default: false
      npm-run-command:
        type: string
        description: 'NPM run command'
        required: false
        default: 'build'
      npm-version:
        type: string
        description: 'NPM version'
        required: false
        default: '18'
      dotnet-version:
        type: string
        description: '.NET version'
        required: false
        default: '8.0.x'
      build-output:
        type: string
        description: 'Build output'
        required: false
        default: './build-output'
      artifact-output:
        type: string
        description: 'Artifact output'
        required: false
        default: './build-assets'
      pack-only:
        type: boolean
        description: 'Pack only'
        required: false
        default: false
    outputs:
      artifact-name:
        description: 'Artifact name'
        value: ${{ jobs.build.outputs.artifact-name }}
      version:
        description: 'Version'
        value: ${{ jobs.determine-version.outputs.semVer }}
jobs:
  determine-version:
    name: üî¢ determine version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
  build:
    name: üèóÔ∏è build ${{ needs.determine-version.outputs.semVer }}
    runs-on: ubuntu-latest
    needs: 
      - determine-version
    env:
      PROJECT_NAME: ${{ inputs.project-name }}
      ARTIFACT_NAME: ${{ inputs.project-name }}-${{ needs.determine-version.outputs.semVer }}
      PROJECT_PATH: ${{ inputs.project-path }}
      NPM_WORKING_DIR: ${{ inputs.npm-working-dir }}
      NPM_ENABLED: ${{ inputs.npm-enabled }}
      NPM_RUN_COMMAND: ${{ inputs.npm-run-command }}
      NPM_VERSION: ${{ inputs.npm-version }}
      DOTNET_VERSION: ${{ inputs.dotnet-version }}
      BUILD_OUTPUT: ${{ inputs.build-output }}
      ARTIFACT_OUTPUT: ${{ inputs.artifact-output }}
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
    outputs:
      artifact-name: ${{ env.ARTIFACT_NAME }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - uses: actions/setup-node@v3
      if: ${{ env.NPM_ENABLED == 'true' }}
      with:
        node-version: ${{ env.NPM_VERSION }}
    - if: ${{ env.NPM_ENABLED == 'true' }}
      run: |
        pushd ${{ env.NPM_WORKING_DIR }}
        npm install
        npm run ${{ env.NPM_RUN_COMMAND }}
        popd
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Build project
      if: ${{ inputs.pack-only == 'false' }}
      run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release -p:Version=${{ env.SEMVER }} --output ${{ env.BUILD_OUTPUT }} /maxcpucount:1
    - name: Pack
      run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release -p:Version=${{ env.SEMVER }} --output ${{ env.ARTIFACT_OUTPUT }}
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ${{ env.ARTIFACT_OUTPUT }}
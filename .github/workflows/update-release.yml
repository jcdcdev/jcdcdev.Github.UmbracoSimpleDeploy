name: Update Release
on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'Version'
        required: true
jobs:
  get-previous-version:
    runs-on: ubuntu-latest
    outputs:
      previous-version: ${{ steps.find-previous-tag.outputs.previous-version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Find Previous Version
      id: find-previous-tag
      shell: pwsh
      env:
        Version: ${{ inputs.version }}
      run: |
        git fetch --tags
        $tags = git tag
        $sortedTags = $tags | Sort-Object -Descending
        $previousVersion = $null

        foreach ($tag in $sortedTags) {
          if ($tag -lt $env.Version) {
            if ($previousVersion -eq $null -or $tag -gt $previousVersion) {
              $previousVersion = $tag
            }
          }
        }

        # Output the nearest previous tag
        if ($previousVersion -eq $null) {
          throw "No previous tag found before $env.Version"
        } 
        
        Write-Output "The nearest previous tag to $env.Version is $previousVersion"
        echo "previous-version=$previousVersion" >> $env:GITHUB_OUTPUT
  generate-changelog:
    needs:
      - get-previous-version
    uses: jcdcdev/jcdcdev.Github.UmbracoSimpleDeploy/.github/workflows/generate-changelog.yml@main
    with:
      target-version: ${{ inputs.version }}
      previous-version: ${{ needs.get-previous-version.outputs.previous-version }}
  create-release:
    needs:
      - get-previous-version
      - generate-changelog
    permissions:
      contents: write
    uses: jcdcdev/jcdcdev.Github.UmbracoSimpleDeploy/.github/workflows/create-release.yml@main
    with:
      version: ${{ inputs.version }}
      changelog: ${{ needs.generate-changelog.outputs.changelog }}